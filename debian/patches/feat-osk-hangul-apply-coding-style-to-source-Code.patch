From: jiyun_ha <jiyun_ha@tmax.co.kr>
Date: Tue, 6 Jul 2021 15:11:39 +0900
Subject: [feat] osk-hangul : apply coding style to source Code

 - modified source code according to coding convention

[IMS] N/A
---
 extensions/osk-hangul/extension.js         | 104 ++++++++++++++---------------
 extensions/osk-hangul/xkbcommon_keysyms.js |   4 +-
 2 files changed, 52 insertions(+), 56 deletions(-)

diff --git a/extensions/osk-hangul/extension.js b/extensions/osk-hangul/extension.js
index 5bf0fdd..ae60df7 100644
--- a/extensions/osk-hangul/extension.js
+++ b/extensions/osk-hangul/extension.js
@@ -8,62 +8,54 @@ const Main = imports.ui.main;
 
 const IBusManager = imports.misc.ibusManager;
 const Me = imports.misc.extensionUtils.getCurrentExtension();
-const QwertyKeysyms = Me.imports.xkbcommon_keysyms.qwertyMap;
+const QwertyKeysyms = Me.imports.xkbcommon_keysyms.QwertyMap;
 
 const HangulKiyeog = 0x0ea1;
 const HangulJYeorinHieuh = 0x0efa;
 
-function isKoreanCharactor(keyval) {
-    if (keyval) {
-        if (HangulKiyeog <= keyval && keyval <= HangulJYeorinHieuh)
-            return true;
-    }
 
-    return false;
-}
+let _originalKeyvalPress = null;
+let _originalKeyvalRelease = null;
+let _originalPopupLanguageMenu = null;
+let _originalSetActiveLayer = null;
+
+function _isKoreanCharactor(keyval) {
+    if (!keyval)
+        return false;
 
-function krToUsKeysym(keyval) {
-    if (isKoreanCharactor(keyval))
-        return QwertyKeysyms[keyval];
+    return HangulKiyeog <= keyval && keyval <= HangulJYeorinHieuh;
+}
 
-    return keyval;
+function _krToUsKeysym(keyval) {
+    return _isKoreanCharactor(keyval) ? QwertyKeysyms[keyval] : keyval;
 }
 
-function getIBusHangul() {
+function _getIBusHangul() {
     let inputSourceManager = Main.inputMethod._inputSourceManager;
     let inputSources = inputSourceManager.inputSources;
     if (!inputSources)
-        return;
-
-    let ibusHangul;
+        return null;
 
-    let numInputSources = Object.keys(inputSources).length;
-    for (let i = 0; i < numInputSources; i++) {
-        if (inputSources[i].id === 'hangul') {
-            ibusHangul = inputSources[i];
-            break;
-        }
+    for (let i of Object.keys(inputSources)) {
+        if (inputSources[i].id === 'hangul')
+            return inputSources[i];
     }
 
-    return ibusHangul;
+    return null;
 }
 
-function getCurrentGroup() {
-    let ibusHangul = getIBusHangul();
-    let groupname;
+function _getCurrentGroup() {
+    let ibusHangul = _getIBusHangul();
+
+    if (ibusHangul && ibusHangul.properties)
+        return ibusHangul.properties.get('InputMode').get_state() === 0 ? 'us' : 'kr';
 
-    if (ibusHangul && ibusHangul.properties) {
-        if (ibusHangul.properties.get(0).get_state() === 0)
-            groupname = 'us';
-        else
-            groupname = 'kr';
-    }
 
-    return groupname;
+    return null;
 }
 
-function nextInputMethod() {
-    let ibusHangul = getIBusHangul();
+function _nextInputMethod() {
+    let ibusHangul = _getIBusHangul();
 
     if (!ibusHangul)
         return;
@@ -75,6 +67,7 @@ function nextInputMethod() {
     }
 
     let ibusManager = IBusManager.getIBusManager();
+    // change InputMode to Korean or English according to its previous mode
     ibusManager.activateProperty('InputMode', IBus.PropState.CHECKED);
 }
 
@@ -85,53 +78,56 @@ function enable() { // eslint-disable-line no-unused-vars
     let keyboard = Main.keyboard._keyboard;
     let controller = keyboard._keyboardController;
 
-    controller._oldKeyvalPress = controller.keyvalPress;
-    controller._oldKeyvalRelease = controller.keyvalRelease;
+    _originalKeyvalPress = controller.keyvalPress;
+    _originalKeyvalRelease = controller.keyvalRelease;
 
     // Change the keyval to english keyval.
     // Because the Hangul combination does not work properly if sending Korean charactor as it is.
     controller.keyvalPress = keyval => {
-        controller._oldKeyvalPress(krToUsKeysym(keyval));
+        _originalKeyvalPress.call(controller, _krToUsKeysym(keyval));
     };
 
     controller.keyvalRelease = keyval => {
-        controller._oldKeyvalRelease(krToUsKeysym(keyval));
+        _originalKeyvalRelease.call(controller, _krToUsKeysym(keyval));
     };
 
-    keyboard._oldPopupLanguageMenu = keyboard._popupLanguageMenu;
+    _originalPopupLanguageMenu = keyboard._popupLanguageMenu;
     keyboard._popupLanguageMenu = () => {
-        nextInputMethod();
+        _nextInputMethod();
     };
 
-    keyboard._ensureKeysForGroup('us');
 
     // Since 'xkbId' is a single value indicating which language the input method supports, so xkbId of ibus-hangul is always 'kr'.
     // This occurs that original _setActiveLayer() function shows only korean keyboard layout even if the actual InputMode is english.
     // So, temporarily change xkbId to match the InputMode of ibus-hangul and restore it.
-    keyboard._oldSetActiveLayer = keyboard._setActiveLayer;
+    _originalSetActiveLayer = keyboard._setActiveLayer;
     keyboard._setActiveLayer = activeLevel => {
+        // make us keyboard layout if not exist
+        keyboard._ensureKeysForGroup('us');
+
         let oldGroupName = controller._currentSource.xkbId;
-        let newGroupname = getCurrentGroup();
+        let newGroupname = _getCurrentGroup();
         if (!newGroupname)
             newGroupname = oldGroupName;
 
         controller._currentSource.xkbId = newGroupname;
-        keyboard._oldSetActiveLayer(activeLevel);
+
+        _originalSetActiveLayer.call(keyboard, activeLevel);
         controller._currentSource.xkbId = oldGroupName;
     };
-
 }
 
 function disable() { // eslint-disable-line no-unused-vars
     let keyboard = Main.keyboard._keyboard;
     let controller = keyboard._keyboardController;
 
-    controller.keyvalPress = controller._oldKeyvalPress;
-    controller.keyvalRelease = controller._oldKeyvalRelease;
-    keyboard._setActiveLayer = keyboard._oldSetActiveLayer;
-    keyboard._popupLanguageMenu = keyboard._oldPopupLanguageMenu;
-    controller._oldKeyvalPress = null;
-    controller._oldKeyvalRelease = null;
-    keyboard._oldPopupLanguageMenu = null;
-    keyboard._oldSetActiveLayer = null;
+    controller.keyvalPress = _originalKeyvalPress;
+    controller.keyvalRelease = _originalKeyvalRelease;
+    keyboard._setActiveLayer = _originalSetActiveLayer;
+    keyboard._popupLanguageMenu = _originalPopupLanguageMenu;
+
+    _originalKeyvalPress = null;
+    _originalKeyvalRelease = null;
+    _originalPopupLanguageMenu = null;
+    _originalSetActiveLayer = null;
 }
diff --git a/extensions/osk-hangul/xkbcommon_keysyms.js b/extensions/osk-hangul/xkbcommon_keysyms.js
index d3200c6..b5fa5ec 100755
--- a/extensions/osk-hangul/xkbcommon_keysyms.js
+++ b/extensions/osk-hangul/xkbcommon_keysyms.js
@@ -1,6 +1,6 @@
-/* exported qwertyMap */
+/* exported QwertyMap */
 
-var qwertyMap =
+var QwertyMap =
 { 0x0ea1: 0x72,
     0x0ea2: 0x52,
     0x0ea4: 0x53,
