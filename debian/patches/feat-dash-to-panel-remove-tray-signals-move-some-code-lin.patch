From: jiyun_ha <jiyun_ha@tmax.co.kr>
Date: Mon, 14 Jun 2021 11:18:35 +0900
Subject: [feat] dash-to-panel : remove tray signals,
 move some code line to handle expected errors and minor refactorings

 - remove 'disable' signal from tray
 - make tray disabled at the beginning of panel disable sequnece
 - changed function name that reflects its meaning clearly
 - remove arrow icon in aggregateMenu

[IMS] N/A
---
 extensions/dash-to-panel/panel.js |  2 +-
 extensions/dash-to-panel/tray.js  | 37 ++++++++++++++++++++++---------------
 2 files changed, 23 insertions(+), 16 deletions(-)

diff --git a/extensions/dash-to-panel/panel.js b/extensions/dash-to-panel/panel.js
index 2b8b5de..b226acb 100644
--- a/extensions/dash-to-panel/panel.js
+++ b/extensions/dash-to-panel/panel.js
@@ -450,6 +450,7 @@ var dtpPanel = Utils.defineClass({ // eslint-disable-line no-unused-vars
     },
 
     disable() {
+        this.tray.disable();
         this.panelStyle.disable();
 
         this._timeoutsHandler.destroy();
@@ -546,7 +547,6 @@ var dtpPanel = Utils.defineClass({ // eslint-disable-line no-unused-vars
         }
 
         Main.ctrlAltTabManager.removeGroup(this);
-        this.tray.disable();
     },
 
     handleDragOver(source, actor, x, y, time) { // eslint-disable-line no-unused-vars
diff --git a/extensions/dash-to-panel/tray.js b/extensions/dash-to-panel/tray.js
index 53a6170..3d88123 100644
--- a/extensions/dash-to-panel/tray.js
+++ b/extensions/dash-to-panel/tray.js
@@ -4,8 +4,6 @@ const { Clutter } = imports.gi;
 const Me = imports.misc.extensionUtils.getCurrentExtension();
 const Utils = Me.imports.utils;
 
-const Signals = imports.signals;
-
 class Tray {
     enable(aggregateMenu) {
         this._originalTray = aggregateMenu;
@@ -20,43 +18,52 @@ class Tray {
         });
 
         let indicators = this._indicators.get_children();
+
+        this._connectedSignals = [];
         indicators.forEach(indicator => {
-            let id = indicator.connect('event', this._onTrayClicked.bind(this));
+            let id = indicator.connect('event', this._onTrayEvent.bind(this));
+            this._connectedSignals.push(id);
             indicator.track_hover = true;
-
-            this.connect('disabled', () => {
-                indicator.disconnect.bind(indicator, id);
-                indicator.track_hover = false;
-            });
         });
 
         // make synchronize the visibility of menu item with icon
         let power = this._originalTray._power;
         power._oldSync = power._sync;
         power._sync = () => {
-            power.visible = power._item.visible;
             power._oldSync();
+            power.visible = power._item.visible;
         };
 
         power._sync();
+
+        this._indicators.get_last_child().visible = false;
     }
 
     disable() {
         Utils.hookVfunc(Object.getPrototypeOf(this._originalTray), 'event', this._originalEventFunc);
         this._restoreOriginalMenu();
 
+        this._indicators.get_last_child().visible = true;
+
         let power = this._originalTray._power;
         power._sync = power._oldSync;
         power.visible = true;
 
+        let indicators = this._indicators.get_children();
+        for (let i = 0; i < this._connectedSignals.length; i++) {
+            let indicator = indicators[i];
+            let id = this._connectedSignals[i];
+
+            indicator.disconnect(id);
+            indicator.track_hover = false;
+        }
+        this._connectedSignals = [];
+
         this._originalTray = null;
         this._menu = null;
         this._indicators = null;
         this._originalMenuItems = null;
         this._originalEventFunc = null;
-
-
-        this.emit('disabled');
     }
 
     _restoreOriginalMenu() {
@@ -80,15 +87,17 @@ class Tray {
         this._menu.sourceActor = actor;
     }
 
-    _onTrayClicked(actor, event) {
+    _onTrayEvent(actor, event) {
         if (actor.menu &&
           (event.type() === Clutter.EventType.TOUCH_BEGIN ||
            event.type() === Clutter.EventType.BUTTON_PRESS)) {
+            // when tray menu item is clicked
             this._changeSourceIndicator(actor);
             this._menu.toggle(true);
         } else if (actor.menu && (event.type() === Clutter.EventType.MOTION ||
                     event.type() === Clutter.EventType.ENTER ||
                     event.type() === Clutter.EventType.LEAVE)) {
+            // when tray menu item is hovered and another menu is already opened, change the opened menu with tray menu
             if (this._menu.isOpen && this._menu.sourceActor !== actor) {
                 this._menu.close();
                 this._changeSourceIndicator(actor);
@@ -99,5 +108,3 @@ class Tray {
         return Clutter.EVENT_STOP;
     }
 }
-
-Signals.addSignalMethods(Tray.prototype);
