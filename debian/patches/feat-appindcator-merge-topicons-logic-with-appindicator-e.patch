From: jingi_jeong <jingi_jeong@tmax.co.kr>
Date: Mon, 12 Apr 2021 13:50:39 +0900
Subject: [feat] appindcator : merge topicons logic with appindicator
 extension

- merge topicons with appindicators
- add topicons.js to handle legacy X protocol tray(ex. wine Window program, KakaoTalk)

[IMS] N/A
---
 extensions/appindicator/extension.js               |   3 +
 extensions/appindicator/indicatorStatusIcon.js     |  25 +-
 extensions/appindicator/meson.build                |   1 +
 extensions/appindicator/topicons.js                |  78 ++++
 extensions/topicons-plus/convenience.js            |  94 -----
 extensions/topicons-plus/extension.js              | 436 ---------------------
 extensions/topicons-plus/gpl-2.0.txt               | 339 ----------------
 extensions/topicons-plus/meson.build               |  13 -
 extensions/topicons-plus/metadata.json.in          |  11 -
 extensions/topicons-plus/prefs.js                  | 187 ---------
 extensions/topicons-plus/schemas/meson.build       |   5 -
 ...org.gnome.shell.extensions.topicons.gschema.xml |  40 --
 extensions/topicons-plus/stylesheet.css            |   1 -
 meson.build                                        |   1 -
 14 files changed, 106 insertions(+), 1128 deletions(-)
 create mode 100644 extensions/appindicator/topicons.js
 delete mode 100644 extensions/topicons-plus/convenience.js
 delete mode 100644 extensions/topicons-plus/extension.js
 delete mode 100644 extensions/topicons-plus/gpl-2.0.txt
 delete mode 100644 extensions/topicons-plus/meson.build
 delete mode 100644 extensions/topicons-plus/metadata.json.in
 delete mode 100644 extensions/topicons-plus/prefs.js
 delete mode 100644 extensions/topicons-plus/schemas/meson.build
 delete mode 100644 extensions/topicons-plus/schemas/org.gnome.shell.extensions.topicons.gschema.xml
 delete mode 100644 extensions/topicons-plus/stylesheet.css

diff --git a/extensions/appindicator/extension.js b/extensions/appindicator/extension.js
index 0b5ee60..5a73398 100644
--- a/extensions/appindicator/extension.js
+++ b/extensions/appindicator/extension.js
@@ -19,6 +19,7 @@
 const Extension = imports.misc.extensionUtils.getCurrentExtension();
 
 const StatusNotifierWatcher = Extension.imports.statusNotifierWatcher;
+const TopIcons = Extension.imports.topicons;
 const Util = Extension.imports.util;
 
 let statusNotifierWatcher = null;
@@ -56,10 +57,12 @@ function maybeEnableAfterNameAvailable() {
 function enable() {
     isEnabled = true;
     maybeEnableAfterNameAvailable();
+    TopIcons.createTray();
 }
 
 function disable() {
     isEnabled = false;
+    TopIcons.destroyTray();
     if (statusNotifierWatcher !== null) {
         statusNotifierWatcher.destroy();
         statusNotifierWatcher = null;
diff --git a/extensions/appindicator/indicatorStatusIcon.js b/extensions/appindicator/indicatorStatusIcon.js
index 2d299cc..777141c 100644
--- a/extensions/appindicator/indicatorStatusIcon.js
+++ b/extensions/appindicator/indicatorStatusIcon.js
@@ -14,7 +14,7 @@
 // along with this program; if not, write to the Free Software
 // Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 
-/* exported IndicatorStatusIcon */
+/* exported IndicatorStatusIcon, IndicatorStatusTopIcon */
 
 const Clutter = imports.gi.Clutter;
 const GObject = imports.gi.GObject;
@@ -31,6 +31,8 @@ const AppIndicator = Extension.imports.appIndicator;
 const DBusMenu = Extension.imports.dbusMenu;
 const Util = Extension.imports.util;
 
+let legacyTrayNumber = 0;
+
 /*
  * IndicatorStatusIcon implements an icon in the system status area
  */
@@ -149,3 +151,24 @@ class AppIndicatorsIndicatorStatusIcon extends PanelMenu.Button {
         return Clutter.EVENT_PROPAGATE;
     }
 });
+
+var IndicatorStatusTopIcon = GObject.registerClass(
+    class AppIndicatorsIndicatorStatusTopIcon extends PanelMenu.Button {
+        _init(icon) {
+            this._uniqueId = `legacyUniqueId${String(legacyTrayNumber++)}`;
+
+            super._init(0.5, this._uniqueId);
+            this._iconBox = icon;
+            this._box = new St.BoxLayout({ style_class: 'panel-status-indicators-box' });
+            this._box.add_style_class_name('appindicator-box');
+            this.add_child(this._box);
+
+            this._box.add_child(this._iconBox);
+
+            Main.panel.addToStatusArea(`appindicator-${this._uniqueId}`, this, 1, 'right');
+        }
+
+        getIcon() {
+            return this._iconBox;
+        }
+    });
diff --git a/extensions/appindicator/meson.build b/extensions/appindicator/meson.build
index eb6d190..f3e1df2 100644
--- a/extensions/appindicator/meson.build
+++ b/extensions/appindicator/meson.build
@@ -11,6 +11,7 @@ extension_sources += files('appIndicator.js',
   'interfaces.js',
   'statusNotifierWatcher.js',
   'promiseUtils.js',
+  'topicons.js',
   'util.js'
 )
 
diff --git a/extensions/appindicator/topicons.js b/extensions/appindicator/topicons.js
new file mode 100644
index 0000000..5ad9093
--- /dev/null
+++ b/extensions/appindicator/topicons.js
@@ -0,0 +1,78 @@
+// This file is part of the AppIndicator/KStatusNotifierItem GNOME Shell extension
+//
+// This program is free software; you can redistribute it and/or
+// modify it under the terms of the GNU General Public License
+// as published by the Free Software Foundation; either version 2
+// of the License, or (at your option) any later version.
+//
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License
+// along with this program; if not, write to the Free Software
+// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+
+/* exported createTray, destroyTray */
+
+const Shell = imports.gi.Shell;
+const Main = imports.ui.main;
+const System = imports.system;
+
+const ExtensionUtils = imports.misc.extensionUtils;
+
+const Me = ExtensionUtils.getCurrentExtension();
+const IndicatorStatusIcon = Me.imports.indicatorStatusIcon;
+
+var tray = null;
+let icons = [];
+
+function createTray() {
+    tray = new Shell.TrayManager();
+    tray.connect('tray-icon-added', onTrayIconAdded);
+    tray.connect('tray-icon-removed', onTrayIconRemoved);
+
+    tray.manage_screen(Main.panel);
+}
+
+function onTrayIconAdded(o, icon, role, unusedDelay = 1000) {
+    const topIcon = new IndicatorStatusIcon.IndicatorStatusTopIcon(icon);
+
+    icon.connect('destroy', () => {
+        icon.clear_effects();
+        topIcon.destroy();
+    });
+
+    icon.connect('button-release-event', (actor, event) => {
+        icon.click(event);
+    });
+
+    icon.reactive = true;
+    icons.push(topIcon);
+}
+
+function onTrayIconRemoved(o, icon) {
+    let index = -1;
+    for (let i = 0; i < icons.length; i++) {
+        if (icons[i].getIcon() === icon)
+            index = i;
+    }
+
+    if (index === -1)
+        return;
+
+    icon.destroy();
+    icons.splice(index, 1);
+}
+
+function destroyTray() {
+    for (let i = 0; i < icons.length; i++)
+        icons[i].destroy();
+
+
+    icons = [];
+
+    tray = null;
+    System.gc(); // force finalizing tray to unmanage screen
+}
diff --git a/extensions/topicons-plus/convenience.js b/extensions/topicons-plus/convenience.js
deleted file mode 100644
index bdc02ea..0000000
--- a/extensions/topicons-plus/convenience.js
+++ /dev/null
@@ -1,94 +0,0 @@
-/* -*- mode: js; js-basic-offset: 4; indent-tabs-mode: nil -*- */
-/*
-  Copyright (c) 2011-2012, Giovanni Campagna <scampa.giovanni@gmail.com>
-
-  Redistribution and use in source and binary forms, with or without
-  modification, are permitted provided that the following conditions are met:
-    * Redistributions of source code must retain the above copyright
-      notice, this list of conditions and the following disclaimer.
-    * Redistributions in binary form must reproduce the above copyright
-      notice, this list of conditions and the following disclaimer in the
-      documentation and/or other materials provided with the distribution.
-    * Neither the name of the GNOME nor the
-      names of its contributors may be used to endorse or promote products
-      derived from this software without specific prior written permission.
-
-  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
-  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY
-  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
-  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
-  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-*/
-
-const Gettext = imports.gettext;
-const Gio = imports.gi.Gio;
-
-const Config = imports.misc.config;
-const ExtensionUtils = imports.misc.extensionUtils;
-
-/**
- * initTranslations:
- * @domain: (optional): the gettext domain to use
- *
- * Initialize Gettext to load translations from extensionsdir/locale.
- * If @domain is not provided, it will be taken from metadata['gettext-domain']
- */
-function initTranslations(domain) {
-    let extension = ExtensionUtils.getCurrentExtension();
-
-    domain = domain || extension.metadata['gettext-domain'];
-
-    // check if this extension was built with "make zip-file", and thus
-    // has the locale files in a subfolder
-    // otherwise assume that extension has been installed in the
-    // same prefix as gnome-shell
-    let localeDir = extension.dir.get_child('locale');
-    if (localeDir.query_exists(null))
-        Gettext.bindtextdomain(domain, localeDir.get_path());
-    else
-        Gettext.bindtextdomain(domain, Config.LOCALEDIR);
-}
-
-/**
- * getSettings:
- * @schema: (optional): the GSettings schema id
- *
- * Builds and return a GSettings schema for @schema, using schema files
- * in extensionsdir/schemas. If @schema is not provided, it is taken from
- * metadata['settings-schema'].
- */
-function getSettings(schema) {
-    let extension = ExtensionUtils.getCurrentExtension();
-
-    schema = schema || extension.metadata['settings-schema'];
-
-    const GioSSS = Gio.SettingsSchemaSource;
-
-    // check if this extension was built with "make zip-file", and thus
-    // has the schema files in a subfolder
-    // otherwise assume that extension has been installed in the
-    // same prefix as gnome-shell (and therefore schemas are available
-    // in the standard folders)
-    let schemaDir = extension.dir.get_child('schemas');
-    let schemaSource;
-    if (schemaDir.query_exists(null)) {
-        schemaSource = GioSSS.new_from_directory(schemaDir.get_path(),
-            GioSSS.get_default(),
-            false);
-    } else {
-        schemaSource = GioSSS.get_default();
-    }
-
-    let schemaObj = schemaSource.lookup(schema, true);
-    if (!schemaObj) {
-        throw new Error(`Schema ${schema} could not be found for extension ${
-            extension.metadata.uuid}. Please check your installation.`);
-    }
-
-    return new Gio.Settings({ settings_schema: schemaObj });
-}
diff --git a/extensions/topicons-plus/extension.js b/extensions/topicons-plus/extension.js
deleted file mode 100644
index 631b837..0000000
--- a/extensions/topicons-plus/extension.js
+++ /dev/null
@@ -1,436 +0,0 @@
-/*
-Copyright (C) phocean <jc@phocean.net>
-
-Credits to:
- - "ag" for the original extension,
- - "Mjnaderi" for the Toptray first fork.
-
-This program is free software; you can redistribute it and/or
-modify it under the terms of the GNU General Public License
-as published by the Free Software Foundation; either version 2
-of the License, or (at your option) any later version.
-
-This program is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
-
-You should have received a copy of the GNU General Public License
-along with this program; if not, write to the Free Software
-Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
-*/
-
-const Shell = imports.gi.Shell;
-const St = imports.gi.St;
-const Main = imports.ui.main;
-const GLib = imports.gi.GLib;
-const Lang = imports.lang;
-const System = imports.system;
-const Clutter = imports.gi.Clutter;
-const PanelMenu = imports.ui.panelMenu;
-const ExtensionUtils = imports.misc.extensionUtils;
-const Me = ExtensionUtils.getCurrentExtension();
-const Convenience = Me.imports.convenience;
-const Config = imports.misc.config;
-
-let settings = null;
-let tray = null;
-let trayIconImplementations = null;
-let trayAddedId = 0;
-let trayRemovedId = 0;
-let icons = [];
-let iconsBoxLayout = null;
-let iconsContainer = null;
-let panelChildSignals = {};
-let blacklist = [['skype', 'SkypeNotification@chrisss404.gmail.com']]; // blacklist: array of [uuid, wmClass (icon application name)] pairs
-
-function init() {
-    Convenience.initTranslations();
-}
-
-function enable() {
-    tray = Main.legacyTray;
-
-    if (tray)
-        GLib.idle_add(GLib.PRIORITY_LOW, moveToTop);
-    else
-        GLib.idle_add(GLib.PRIORITY_LOW, createTray);
-
-    settings = Convenience.getSettings();
-    settings.connect('changed::icon-opacity', Lang.bind(this, setOpacity));
-    settings.connect('changed::icon-saturation', Lang.bind(this, setSaturation));
-    settings.connect('changed::icon-brightness', Lang.bind(this, setBrightnessContrast));
-    settings.connect('changed::icon-contrast', Lang.bind(this, setBrightnessContrast));
-    settings.connect('changed::icon-size', Lang.bind(this, setSize));
-    settings.connect('changed::icon-spacing', Lang.bind(this, setSpacing));
-    settings.connect('changed::tray-pos', Lang.bind(this, placeTray));
-    settings.connect('changed::tray-order', Lang.bind(this, placeTray));
-
-    connectPanelChildSignals();
-}
-
-function disable() {
-    disconnectPanelChildSignals();
-
-    if (Main.legacyTray)
-        moveToTray();
-    else
-        destroyTray();
-    settings.run_dispose();
-}
-
-function onTrayIconAdded(o, icon, role, delay = 1000) {
-
-    // loop through the array and hide the extension if extension X is enabled and corresponding application is running
-    let iconWmClass = icon.wm_class ? icon.wm_class.toLowerCase() : '';
-    for (let [wmClass, uuid] of blacklist) {
-        if (Main.extensionManager === undefined) {
-            // For gnome-shell < 3.33.90
-            if (ExtensionUtils.extensions[uuid] !== undefined &&
-                ExtensionUtils.extensions[uuid].state === 1 &&
-                iconWmClass === wmClass)
-                return;
-        } else {
-            // For gnome-shell >= 3.33.90
-            if (Main.extensionManager.lookup(uuid) &&
-                iconWmClass === wmClass)
-                return;
-        }
-    }
-
-    let iconContainer = new St.Button({ child: icon, visible: false });
-
-    icon.connect('destroy', () => {
-        icon.clear_effects();
-        iconContainer.destroy();
-    });
-
-    iconContainer.connect('button-release-event', (actor, event) => {
-        icon.click(event);
-    });
-
-    GLib.timeout_add(GLib.PRIORITY_DEFAULT, delay, Lang.bind(this, () => {
-        iconContainer.visible = true;
-        iconsContainer.show();
-        return GLib.SOURCE_REMOVE;
-    }));
-
-    iconsBoxLayout.insert_child_at_index(iconContainer, 0);
-    setIcon(icon);
-    icons.push(icon);
-}
-
-function onTrayIconRemoved(o, icon) {
-
-    if (icons.indexOf(icon) == -1)
-        return;
-
-
-    let parent = icon.get_parent();
-    if (parent)
-        parent.destroy();
-    if (!parent || !versionAtLeast('3.30', Config.PACKAGE_VERSION))
-        icon.destroy();
-    icons.splice(icons.indexOf(icon), 1);
-
-    if (icons.length === 0)
-        iconsContainer.hide();
-
-}
-
-function onPanelChange(actor, child) {
-    if (!iconsBoxLayout || iconsBoxLayout.get_parent() === child)
-        return;
-
-    // refresh position on panel left/center/right
-    // box add/remove child event
-    placeTray();
-}
-
-function connectPanelChildSignals() {
-    panelChildSignals = {
-        left: {
-            add: Main.panel._leftBox.connect('actor_added', Lang.bind(this, onPanelChange)),
-            del: Main.panel._leftBox.connect('actor_removed', Lang.bind(this, onPanelChange)),
-        },
-        center: {
-            add: Main.panel._centerBox.connect('actor_added', Lang.bind(this, onPanelChange)),
-            del: Main.panel._centerBox.connect('actor_removed', Lang.bind(this, onPanelChange)),
-        },
-        right: {
-            add: Main.panel._rightBox.connect('actor_added', Lang.bind(this, onPanelChange)),
-            del: Main.panel._rightBox.connect('actor_removed', Lang.bind(this, onPanelChange)),
-        },
-    };
-}
-
-function disconnectPanelChildSignals() {
-    Main.panel._leftBox.disconnect(panelChildSignals.left.add);
-    Main.panel._leftBox.disconnect(panelChildSignals.left.del);
-    Main.panel._centerBox.disconnect(panelChildSignals.center.add);
-    Main.panel._centerBox.disconnect(panelChildSignals.center.del);
-    Main.panel._rightBox.disconnect(panelChildSignals.right.add);
-    Main.panel._rightBox.disconnect(panelChildSignals.right.del);
-}
-
-function createIconsContainer() {
-    // Create box layout for icon containers
-    iconsBoxLayout = new St.BoxLayout();
-    setSpacing();
-
-    // An empty ButtonBox will still display padding,therefore create it without visibility.
-    iconsContainer = new PanelMenu.ButtonBox({ visible: false });
-    iconsContainer.add_actor(iconsBoxLayout);
-}
-
-function createTray() {
-    createIconsContainer();
-
-    tray = new Shell.TrayManager();
-    tray.connect('tray-icon-added', onTrayIconAdded);
-    tray.connect('tray-icon-removed', onTrayIconRemoved);
-    if (global.screen) {
-        // For GNOME 3.28 and older
-        tray.manage_screen(global.screen, Main.panel.actor);
-    } else {
-        // For GNOME 3.30+
-        tray.manage_screen(Main.panel);
-    }
-    placeTray();
-}
-
-function destroyTray() {
-    iconsContainer.destroy();
-    iconsContainer = null;
-    iconsBoxLayout = null;
-    icons = [];
-
-    tray = null;
-    System.gc(); // force finalizing tray to unmanage screen
-}
-
-function moveToTop() {
-
-    // Replace signal handlers
-    if (tray._trayIconAddedId)
-        tray._trayManager.disconnect(tray._trayIconAddedId);
-    if (tray._trayIconRemovedId)
-        tray._trayManager.disconnect(tray._trayIconRemovedId);
-    trayAddedId = tray._trayManager.connect('tray-icon-added', onTrayIconAdded);
-    trayRemovedId = tray._trayManager.connect('tray-icon-removed', onTrayIconRemoved);
-
-    createIconsContainer();
-    placeTray();
-
-    // Move each tray icon to the top
-    let length = tray._iconBox.get_n_children();
-    for (let i = 0; i < length; i++) {
-        let button = tray._iconBox.get_child_at_index(0);
-        let icon = button.child;
-        button.remove_actor(icon);
-        button.destroy();
-        // Icon already loaded, no need to delay insertion
-        onTrayIconAdded(this, icon, '', 0);
-    }
-
-}
-
-function moveToTray() {
-
-    // Replace signal handlers
-    if (trayAddedId) {
-        tray._trayManager.disconnect(trayAddedId);
-        trayAddedId = 0;
-    }
-
-    if (trayRemovedId) {
-        tray._trayManager.disconnect(trayRemovedId);
-        trayRemovedId = 0;
-    }
-
-    tray._trayIconAddedId = tray._trayManager.connect(
-        'tray-icon-added', Lang.bind(tray, tray._onTrayIconAdded));
-    tray._trayIconRemovedId = tray._trayManager.connect(
-        'tray-icon-removed', Lang.bind(tray, tray._onTrayIconRemoved));
-
-    // Clean and move each icon back to the Legacy Tray;
-    for (let i = 0; i < icons.length; i++) {
-        let icon = icons[i];
-        icon.opacity = 255;
-        icon.clear_effects();
-        let parent = icon.get_parent();
-        if (parent) {
-            parent.remove_actor(icon);
-            parent.destroy();
-        }
-        tray._onTrayIconAdded(tray, icon);
-    }
-
-    // Clean containers
-    icons = [];
-    if (iconsBoxLayout) {
-        iconsBoxLayout.destroy();
-        iconsBoxLayout = null;
-    }
-    if (iconsContainer) {
-        if (iconsContainer) {
-            iconsContainer.destroy();
-            iconsContainer = null;
-        }
-        iconsContainer = null;
-    }
-
-}
-
-// Settings
-
-function placeTray() {
-
-    let trayPosition = settings.get_string('tray-pos');
-    let trayOrder = settings.get_int('tray-order');
-
-    let parent = iconsContainer.get_parent();
-    if (parent)
-        parent.remove_actor(iconsContainer);
-
-    // panel box
-    let box;
-    if (trayPosition == 'left')
-        box = Main.panel._leftBox;
-    else if (trayPosition == 'center')
-        box = Main.panel._centerBox;
-    else
-        box = Main.panel._rightBox;
-
-    // fix index (trayOrder larger than length)
-    let length = box.get_n_children();
-    let index = length - Math.min(trayOrder, length);
-
-    box.insert_child_at_index(iconsContainer, index);
-
-}
-
-function setIcon(icon) {
-
-    icon.reactive = true;
-    setSize(icon);
-    setOpacity(icon);
-    setSaturation(icon);
-    setBrightnessContrast(icon);
-
-}
-
-function setOpacity(icon) {
-
-    let opacityValue = settings.get_int('icon-opacity');
-
-    if (arguments.length == 1) {
-        icon.opacityEnterId = icon.get_parent().connect('enter-event', (actor, event) => {
-            icon.opacity = 255;
-        });
-        icon.opacityLeaveId = icon.get_parent().connect('leave-event', (actor, event) => {
-            icon.opacity = opacityValue;
-        });
-        icon.opacity = opacityValue;
-    } else {
-        for (let i = 0; i < icons.length; i++) {
-            let icon = icons[i];
-            icon.opacityEnterId = icon.get_parent().connect('enter-event', (actor, event) => {
-                icon.opacity = 255;
-            });
-            icon.opacityLeaveId = icon.get_parent().connect('leave-event', (actor, event) => {
-                icon.opacity = opacityValue;
-            });
-            icon.opacity = opacityValue;
-        }
-    }
-}
-
-function setSaturation(icon) {
-
-    let desaturationValue =  settings.get_double('icon-saturation');
-
-    if (arguments.length == 1) {
-        let sat_effect = new Clutter.DesaturateEffect({ factor: desaturationValue });
-        sat_effect.set_factor(desaturationValue);
-        sat_effect.set_factor(desaturationValue);
-        icon.add_effect_with_name('desaturate', sat_effect);
-    } else {
-        for (let i = 0; i < icons.length; i++) {
-            let icon = icons[i];
-            let effect = icon.get_effect('desaturate');
-            if (effect)
-                effect.set_factor(desaturationValue);
-        }
-    }
-
-}
-
-function setBrightnessContrast(icon) {
-
-    let brightnessValue = settings.get_double('icon-brightness');
-    let contrastValue =  settings.get_double('icon-contrast');
-
-    if (arguments.length == 1) {
-        let bright_effect = new Clutter.BrightnessContrastEffect({});
-        bright_effect.set_brightness(brightnessValue);
-        bright_effect.set_contrast(contrastValue);
-        icon.add_effect_with_name('brightness-contrast', bright_effect);
-    } else {
-        for (let i = 0; i < icons.length; i++) {
-            let icon = icons[i];
-            let effect = icon.get_effect('brightness-contrast');
-            effect.set_brightness(brightnessValue);
-            effect.set_contrast(contrastValue);
-        }
-    }
-
-}
-
-function setSize(icon) {
-
-    let iconSize = settings.get_int('icon-size');
-    let scaleFactor = St.ThemeContext.get_for_stage(global.stage).scale_factor;
-
-    if (arguments.length == 1) {
-        icon.get_parent().set_size(iconSize * scaleFactor, iconSize * scaleFactor);
-        // icon.set_size(iconSize * scaleFactor, iconSize * scaleFactor);
-        icon.set_height(iconSize * scaleFactor);
-        icon.set_y_align(Clutter.ActorAlign.CENTER);
-    } else {
-        for (let i = 0; i < icons.length; i++) {
-            let icon = icons[i];
-            icon.get_parent().set_size(iconSize * scaleFactor, iconSize * scaleFactor);
-            // icon.set_size(iconSize * scaleFactor, iconSize * scaleFactor);
-            icon.set_height(iconSize * scaleFactor);
-            icon.set_y_align(Clutter.ActorAlign.CENTER);
-        }
-    }
-
-}
-
-function setSpacing() {
-
-    let boxLayoutSpacing = settings.get_int('icon-spacing');
-
-    iconsBoxLayout.set_style(`spacing: ${boxLayoutSpacing}px; margin_top: 2px; margin_bottom: 2px;`);
-
-}
-
-// Code copied from PanelOSD extension (GPL 2.0)
-function versionAtLeast(atleast, current) {
-    let currentArray = current.split('.');
-    let major = currentArray[0];
-    let minor = currentArray[1];
-    let point = currentArray[2];
-    let atleastArray = atleast.split('.');
-    if (atleastArray[0] < major ||
-        atleastArray[0] == major &&
-         atleastArray[1] < minor ||
-        atleastArray[0] == major &&
-         atleastArray[1] == minor &&
-        (atleastArray[2] == undefined ||
-         atleastArray[2] <= point))
-        return true;
-    return false;
-}
diff --git a/extensions/topicons-plus/gpl-2.0.txt b/extensions/topicons-plus/gpl-2.0.txt
deleted file mode 100644
index d159169..0000000
--- a/extensions/topicons-plus/gpl-2.0.txt
+++ /dev/null
@@ -1,339 +0,0 @@
-                    GNU GENERAL PUBLIC LICENSE
-                       Version 2, June 1991
-
- Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
- 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- Everyone is permitted to copy and distribute verbatim copies
- of this license document, but changing it is not allowed.
-
-                            Preamble
-
-  The licenses for most software are designed to take away your
-freedom to share and change it.  By contrast, the GNU General Public
-License is intended to guarantee your freedom to share and change free
-software--to make sure the software is free for all its users.  This
-General Public License applies to most of the Free Software
-Foundation's software and to any other program whose authors commit to
-using it.  (Some other Free Software Foundation software is covered by
-the GNU Lesser General Public License instead.)  You can apply it to
-your programs, too.
-
-  When we speak of free software, we are referring to freedom, not
-price.  Our General Public Licenses are designed to make sure that you
-have the freedom to distribute copies of free software (and charge for
-this service if you wish), that you receive source code or can get it
-if you want it, that you can change the software or use pieces of it
-in new free programs; and that you know you can do these things.
-
-  To protect your rights, we need to make restrictions that forbid
-anyone to deny you these rights or to ask you to surrender the rights.
-These restrictions translate to certain responsibilities for you if you
-distribute copies of the software, or if you modify it.
-
-  For example, if you distribute copies of such a program, whether
-gratis or for a fee, you must give the recipients all the rights that
-you have.  You must make sure that they, too, receive or can get the
-source code.  And you must show them these terms so they know their
-rights.
-
-  We protect your rights with two steps: (1) copyright the software, and
-(2) offer you this license which gives you legal permission to copy,
-distribute and/or modify the software.
-
-  Also, for each author's protection and ours, we want to make certain
-that everyone understands that there is no warranty for this free
-software.  If the software is modified by someone else and passed on, we
-want its recipients to know that what they have is not the original, so
-that any problems introduced by others will not reflect on the original
-authors' reputations.
-
-  Finally, any free program is threatened constantly by software
-patents.  We wish to avoid the danger that redistributors of a free
-program will individually obtain patent licenses, in effect making the
-program proprietary.  To prevent this, we have made it clear that any
-patent must be licensed for everyone's free use or not licensed at all.
-
-  The precise terms and conditions for copying, distribution and
-modification follow.
-
-                    GNU GENERAL PUBLIC LICENSE
-   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
-
-  0. This License applies to any program or other work which contains
-a notice placed by the copyright holder saying it may be distributed
-under the terms of this General Public License.  The "Program", below,
-refers to any such program or work, and a "work based on the Program"
-means either the Program or any derivative work under copyright law:
-that is to say, a work containing the Program or a portion of it,
-either verbatim or with modifications and/or translated into another
-language.  (Hereinafter, translation is included without limitation in
-the term "modification".)  Each licensee is addressed as "you".
-
-Activities other than copying, distribution and modification are not
-covered by this License; they are outside its scope.  The act of
-running the Program is not restricted, and the output from the Program
-is covered only if its contents constitute a work based on the
-Program (independent of having been made by running the Program).
-Whether that is true depends on what the Program does.
-
-  1. You may copy and distribute verbatim copies of the Program's
-source code as you receive it, in any medium, provided that you
-conspicuously and appropriately publish on each copy an appropriate
-copyright notice and disclaimer of warranty; keep intact all the
-notices that refer to this License and to the absence of any warranty;
-and give any other recipients of the Program a copy of this License
-along with the Program.
-
-You may charge a fee for the physical act of transferring a copy, and
-you may at your option offer warranty protection in exchange for a fee.
-
-  2. You may modify your copy or copies of the Program or any portion
-of it, thus forming a work based on the Program, and copy and
-distribute such modifications or work under the terms of Section 1
-above, provided that you also meet all of these conditions:
-
-    a) You must cause the modified files to carry prominent notices
-    stating that you changed the files and the date of any change.
-
-    b) You must cause any work that you distribute or publish, that in
-    whole or in part contains or is derived from the Program or any
-    part thereof, to be licensed as a whole at no charge to all third
-    parties under the terms of this License.
-
-    c) If the modified program normally reads commands interactively
-    when run, you must cause it, when started running for such
-    interactive use in the most ordinary way, to print or display an
-    announcement including an appropriate copyright notice and a
-    notice that there is no warranty (or else, saying that you provide
-    a warranty) and that users may redistribute the program under
-    these conditions, and telling the user how to view a copy of this
-    License.  (Exception: if the Program itself is interactive but
-    does not normally print such an announcement, your work based on
-    the Program is not required to print an announcement.)
-
-These requirements apply to the modified work as a whole.  If
-identifiable sections of that work are not derived from the Program,
-and can be reasonably considered independent and separate works in
-themselves, then this License, and its terms, do not apply to those
-sections when you distribute them as separate works.  But when you
-distribute the same sections as part of a whole which is a work based
-on the Program, the distribution of the whole must be on the terms of
-this License, whose permissions for other licensees extend to the
-entire whole, and thus to each and every part regardless of who wrote it.
-
-Thus, it is not the intent of this section to claim rights or contest
-your rights to work written entirely by you; rather, the intent is to
-exercise the right to control the distribution of derivative or
-collective works based on the Program.
-
-In addition, mere aggregation of another work not based on the Program
-with the Program (or with a work based on the Program) on a volume of
-a storage or distribution medium does not bring the other work under
-the scope of this License.
-
-  3. You may copy and distribute the Program (or a work based on it,
-under Section 2) in object code or executable form under the terms of
-Sections 1 and 2 above provided that you also do one of the following:
-
-    a) Accompany it with the complete corresponding machine-readable
-    source code, which must be distributed under the terms of Sections
-    1 and 2 above on a medium customarily used for software interchange; or,
-
-    b) Accompany it with a written offer, valid for at least three
-    years, to give any third party, for a charge no more than your
-    cost of physically performing source distribution, a complete
-    machine-readable copy of the corresponding source code, to be
-    distributed under the terms of Sections 1 and 2 above on a medium
-    customarily used for software interchange; or,
-
-    c) Accompany it with the information you received as to the offer
-    to distribute corresponding source code.  (This alternative is
-    allowed only for noncommercial distribution and only if you
-    received the program in object code or executable form with such
-    an offer, in accord with Subsection b above.)
-
-The source code for a work means the preferred form of the work for
-making modifications to it.  For an executable work, complete source
-code means all the source code for all modules it contains, plus any
-associated interface definition files, plus the scripts used to
-control compilation and installation of the executable.  However, as a
-special exception, the source code distributed need not include
-anything that is normally distributed (in either source or binary
-form) with the major components (compiler, kernel, and so on) of the
-operating system on which the executable runs, unless that component
-itself accompanies the executable.
-
-If distribution of executable or object code is made by offering
-access to copy from a designated place, then offering equivalent
-access to copy the source code from the same place counts as
-distribution of the source code, even though third parties are not
-compelled to copy the source along with the object code.
-
-  4. You may not copy, modify, sublicense, or distribute the Program
-except as expressly provided under this License.  Any attempt
-otherwise to copy, modify, sublicense or distribute the Program is
-void, and will automatically terminate your rights under this License.
-However, parties who have received copies, or rights, from you under
-this License will not have their licenses terminated so long as such
-parties remain in full compliance.
-
-  5. You are not required to accept this License, since you have not
-signed it.  However, nothing else grants you permission to modify or
-distribute the Program or its derivative works.  These actions are
-prohibited by law if you do not accept this License.  Therefore, by
-modifying or distributing the Program (or any work based on the
-Program), you indicate your acceptance of this License to do so, and
-all its terms and conditions for copying, distributing or modifying
-the Program or works based on it.
-
-  6. Each time you redistribute the Program (or any work based on the
-Program), the recipient automatically receives a license from the
-original licensor to copy, distribute or modify the Program subject to
-these terms and conditions.  You may not impose any further
-restrictions on the recipients' exercise of the rights granted herein.
-You are not responsible for enforcing compliance by third parties to
-this License.
-
-  7. If, as a consequence of a court judgment or allegation of patent
-infringement or for any other reason (not limited to patent issues),
-conditions are imposed on you (whether by court order, agreement or
-otherwise) that contradict the conditions of this License, they do not
-excuse you from the conditions of this License.  If you cannot
-distribute so as to satisfy simultaneously your obligations under this
-License and any other pertinent obligations, then as a consequence you
-may not distribute the Program at all.  For example, if a patent
-license would not permit royalty-free redistribution of the Program by
-all those who receive copies directly or indirectly through you, then
-the only way you could satisfy both it and this License would be to
-refrain entirely from distribution of the Program.
-
-If any portion of this section is held invalid or unenforceable under
-any particular circumstance, the balance of the section is intended to
-apply and the section as a whole is intended to apply in other
-circumstances.
-
-It is not the purpose of this section to induce you to infringe any
-patents or other property right claims or to contest validity of any
-such claims; this section has the sole purpose of protecting the
-integrity of the free software distribution system, which is
-implemented by public license practices.  Many people have made
-generous contributions to the wide range of software distributed
-through that system in reliance on consistent application of that
-system; it is up to the author/donor to decide if he or she is willing
-to distribute software through any other system and a licensee cannot
-impose that choice.
-
-This section is intended to make thoroughly clear what is believed to
-be a consequence of the rest of this License.
-
-  8. If the distribution and/or use of the Program is restricted in
-certain countries either by patents or by copyrighted interfaces, the
-original copyright holder who places the Program under this License
-may add an explicit geographical distribution limitation excluding
-those countries, so that distribution is permitted only in or among
-countries not thus excluded.  In such case, this License incorporates
-the limitation as if written in the body of this License.
-
-  9. The Free Software Foundation may publish revised and/or new versions
-of the General Public License from time to time.  Such new versions will
-be similar in spirit to the present version, but may differ in detail to
-address new problems or concerns.
-
-Each version is given a distinguishing version number.  If the Program
-specifies a version number of this License which applies to it and "any
-later version", you have the option of following the terms and conditions
-either of that version or of any later version published by the Free
-Software Foundation.  If the Program does not specify a version number of
-this License, you may choose any version ever published by the Free Software
-Foundation.
-
-  10. If you wish to incorporate parts of the Program into other free
-programs whose distribution conditions are different, write to the author
-to ask for permission.  For software which is copyrighted by the Free
-Software Foundation, write to the Free Software Foundation; we sometimes
-make exceptions for this.  Our decision will be guided by the two goals
-of preserving the free status of all derivatives of our free software and
-of promoting the sharing and reuse of software generally.
-
-                            NO WARRANTY
-
-  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
-FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
-OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
-PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
-OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
-MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
-TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
-PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
-REPAIR OR CORRECTION.
-
-  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
-WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
-REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
-INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
-OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
-TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
-YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
-PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
-POSSIBILITY OF SUCH DAMAGES.
-
-                     END OF TERMS AND CONDITIONS
-
-            How to Apply These Terms to Your New Programs
-
-  If you develop a new program, and you want it to be of the greatest
-possible use to the public, the best way to achieve this is to make it
-free software which everyone can redistribute and change under these terms.
-
-  To do so, attach the following notices to the program.  It is safest
-to attach them to the start of each source file to most effectively
-convey the exclusion of warranty; and each file should have at least
-the "copyright" line and a pointer to where the full notice is found.
-
-    <one line to give the program's name and a brief idea of what it does.>
-    Copyright (C) <year>  <name of author>
-
-    This program is free software; you can redistribute it and/or modify
-    it under the terms of the GNU General Public License as published by
-    the Free Software Foundation; either version 2 of the License, or
-    (at your option) any later version.
-
-    This program is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU General Public License for more details.
-
-    You should have received a copy of the GNU General Public License along
-    with this program; if not, write to the Free Software Foundation, Inc.,
-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
-
-Also add information on how to contact you by electronic and paper mail.
-
-If the program is interactive, make it output a short notice like this
-when it starts in an interactive mode:
-
-    Gnomovision version 69, Copyright (C) year name of author
-    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
-    This is free software, and you are welcome to redistribute it
-    under certain conditions; type `show c' for details.
-
-The hypothetical commands `show w' and `show c' should show the appropriate
-parts of the General Public License.  Of course, the commands you use may
-be called something other than `show w' and `show c'; they could even be
-mouse-clicks or menu items--whatever suits your program.
-
-You should also get your employer (if you work as a programmer) or your
-school, if any, to sign a "copyright disclaimer" for the program, if
-necessary.  Here is a sample; alter the names:
-
-  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
-  `Gnomovision' (which makes passes at compilers) written by James Hacker.
-
-  <signature of Ty Coon>, 1 April 1989
-  Ty Coon, President of Vice
-
-This General Public License does not permit incorporating your program into
-proprietary programs.  If your program is a subroutine library, you may
-consider it more useful to permit linking proprietary applications with the
-library.  If this is what you want to do, use the GNU Lesser General
-Public License instead of this License.
diff --git a/extensions/topicons-plus/meson.build b/extensions/topicons-plus/meson.build
deleted file mode 100644
index fdc645e..0000000
--- a/extensions/topicons-plus/meson.build
+++ /dev/null
@@ -1,13 +0,0 @@
-extension_data += configure_file(
-  input: metadata_name + '.in',
-  output: metadata_name,
-  configuration: metadata_conf
-)
-
-extension_sources += files('prefs.js',
-  'convenience.js'
-)
-
-
-schema_data_dir = 'schemas'
-subdir(schema_data_dir)
diff --git a/extensions/topicons-plus/metadata.json.in b/extensions/topicons-plus/metadata.json.in
deleted file mode 100644
index 0e76fc1..0000000
--- a/extensions/topicons-plus/metadata.json.in
+++ /dev/null
@@ -1,11 +0,0 @@
-{
- "extension-id": "@extension_id@",
- "uuid": "@uuid@",
- "settings-schema": "org.gnome.shell.extensions.topicons",
- "gettext-domain": "TopIcons-Plus",
- "name": "TopIcons Plus",
- "description": "This extension moves legacy tray icons (bottom left of Gnome Shell) to the top panel. It is a fork from the original extension from ag  with settings for icon opacity,     saturation, padding, size and tray position, along with a few minor fixes and integration with the Skype integration extension.",
- "shell-version": [ "@shell_current@" ],
- "original-authors": [ "phocean" ],
- "url": "@url@"
-}
diff --git a/extensions/topicons-plus/prefs.js b/extensions/topicons-plus/prefs.js
deleted file mode 100644
index b97b440..0000000
--- a/extensions/topicons-plus/prefs.js
+++ /dev/null
@@ -1,187 +0,0 @@
-// -*- mode: js2; indent-tabs-mode: nil; js2-basic-offset: 4 -*-
-
-const GObject = imports.gi.GObject;
-const Gtk = imports.gi.Gtk;
-const Lang = imports.lang;
-const Gio = imports.gi.Gio;
-
-const ExtensionUtils = imports.misc.extensionUtils;
-const Me = ExtensionUtils.getCurrentExtension();
-const Convenience = Me.imports.convenience;
-const Gettext = imports.gettext.domain(Me.metadata['gettext-domain']);
-const _ = Gettext.gettext;
-
-function init() {
-    Convenience.initTranslations();
-}
-
-const TopIconsPlusSettings = new GObject.Class({
-    Name: 'TopIconsPlusPrefs',
-    Extends: Gtk.Grid,
-
-    _init(params) {
-
-        this.parent(params);
-        this.margin = 24;
-        this.spacing = 30;
-        this.row_spacing = 10;
-        this._settings = Convenience.getSettings();
-
-        let label = null;
-        let widget = null;
-        let value = null;
-        let positionSetting = null;
-        let positionButton = null;
-        let radio = null;
-
-        // Icon opacity
-        label = new Gtk.Label({
-            label: _('Opacity (min: 0, max: 255)'),
-            hexpand: true,
-            halign: Gtk.Align.START,
-        });
-        widget = new Gtk.SpinButton({ halign: Gtk.Align.END });
-        widget.set_sensitive(true);
-        widget.set_range(0, 255);
-        widget.set_value(this._settings.get_int('icon-opacity'));
-        widget.set_increments(1, 2);
-        widget.connect('value-changed', Lang.bind(this, function (w) {
-            value = w.get_value_as_int();
-            this._settings.set_int('icon-opacity', value);
-        }));
-        this.attach(label, 0, 1, 1, 1);
-        this.attach(widget, 1, 1, 1, 1);
-
-        // Icon saturation
-        label = new Gtk.Label({
-            label: _('Desaturation (min: 0.0, max: 1.0)'),
-            hexpand: true,
-            halign: Gtk.Align.START,
-        });
-        widget = new Gtk.SpinButton({ halign: Gtk.Align.END, digits: 1 });
-        widget.set_sensitive(true);
-        widget.set_range(0.0, 1.0);
-        widget.set_value(this._settings.get_double('icon-saturation'));
-        widget.set_increments(0.1, 0.2);
-        widget.connect('value-changed', Lang.bind(this, function (w) {
-            value = w.get_value();
-            this._settings.set_double('icon-saturation', value);
-        }));
-        this.attach(label, 0, 2, 1, 1);
-        this.attach(widget, 1, 2, 1, 1);
-
-        // Icon brightness
-        label = new Gtk.Label({
-            label: _('Brightness (min: -1.0, max: 1.0)'),
-            hexpand: true,
-            halign: Gtk.Align.START,
-        });
-        widget = new Gtk.SpinButton({ halign: Gtk.Align.END, digits: 1 });
-        widget.set_sensitive(true);
-        widget.set_range(-1.0, 1.0);
-        widget.set_value(this._settings.get_double('icon-brightness'));
-        widget.set_increments(0.1, 0.2);
-        widget.connect('value-changed', Lang.bind(this, function (w) {
-            value = w.get_value();
-            this._settings.set_double('icon-brightness', value);
-        }));
-        this.attach(label, 0, 3, 1, 1);
-        this.attach(widget, 1, 3, 1, 1);
-
-        // Icon contrast
-        label = new Gtk.Label({
-            label: _('Contrast (min: -1.0, max: 1.0)'),
-            hexpand: true,
-            halign: Gtk.Align.START,
-        });
-        widget = new Gtk.SpinButton({ halign: Gtk.Align.END, digits: 1 });
-        widget.set_sensitive(true);
-        widget.set_range(-1.0, 1.0);
-        widget.set_value(this._settings.get_double('icon-contrast'));
-        widget.set_increments(0.1, 0.2);
-        widget.connect('value-changed', Lang.bind(this, function (w) {
-            value = w.get_value();
-            this._settings.set_double('icon-contrast', value);
-        }));
-        this.attach(label, 0, 4, 1, 1);
-        this.attach(widget, 1, 4, 1, 1);
-
-        // Icon size
-        label = new Gtk.Label({
-            label: _('Icon size (min: 0, max: 96)'),
-            hexpand: true,
-            halign: Gtk.Align.START,
-        });
-        widget = new Gtk.SpinButton({ halign: Gtk.Align.END });
-        widget.set_sensitive(true);
-        widget.set_range(0, 96);
-        widget.set_value(this._settings.get_int('icon-size'));
-        widget.set_increments(1, 2);
-        widget.connect('value-changed', Lang.bind(this, function (w) {
-            value = w.get_value_as_int();
-            this._settings.set_int('icon-size', value);
-        }));
-        this.attach(label, 0, 5, 1, 1);
-        this.attach(widget, 1, 5, 1, 1);
-
-        // Icon tray spacing
-        label = new Gtk.Label({
-            label: _('Spacing between icons (min: 0, max: 20)'),
-            hexpand: true,
-            halign: Gtk.Align.START,
-        });
-        widget = new Gtk.SpinButton({ halign: Gtk.Align.END });
-        widget.set_sensitive(true);
-        widget.set_range(0, 20);
-        widget.set_value(this._settings.get_int('icon-spacing'));
-        widget.set_increments(1, 2);
-        widget.connect('value-changed', Lang.bind(this, function (w) {
-            value = w.get_value_as_int();
-            this._settings.set_int('icon-spacing', value);
-        }));
-        this.attach(label, 0, 6, 1, 1);
-        this.attach(widget, 1, 6, 1, 1);
-
-        // Tray position in panel
-        label = new Gtk.Label({
-            label: _('Tray horizontal alignment'),
-            hexpand: true,
-            halign: Gtk.Align.START,
-        });
-        widget = new Gtk.ComboBoxText();
-        widget.append('center', _('Center'));
-        widget.append('left', _('Left'));
-        widget.append('right', _('Right'));
-        this._settings.bind('tray-pos', widget, 'active-id', Gio.SettingsBindFlags.DEFAULT);
-        this.attach(label, 0, 7, 1, 1);
-        this.attach(widget, 1, 7, 1, 1);
-
-        // Tray order in panel
-        label = new Gtk.Label({
-            label: _('Tray offset'),
-            hexpand: true,
-            halign: Gtk.Align.START,
-        });
-        widget = new Gtk.SpinButton({ halign: Gtk.Align.END });
-        widget.set_sensitive(true);
-        widget.set_range(0, 20);
-        widget.set_value(this._settings.get_int('tray-order'));
-        widget.set_increments(1, 2);
-        widget.connect('value-changed', Lang.bind(this, function (w) {
-            value = w.get_value_as_int();
-            this._settings.set_int('tray-order', value);
-        }));
-        this.attach(label, 0, 8, 1, 1);
-        this.attach(widget, 1, 8, 1, 1);
-
-        // this._changedPermitted = true;
-    },
-
-});
-
-function buildPrefsWidget() {
-    let widget = new TopIconsPlusSettings();
-    widget.show_all();
-
-    return widget;
-}
diff --git a/extensions/topicons-plus/schemas/meson.build b/extensions/topicons-plus/schemas/meson.build
deleted file mode 100644
index 0d0d88a..0000000
--- a/extensions/topicons-plus/schemas/meson.build
+++ /dev/null
@@ -1,5 +0,0 @@
-install_data([
-    'org.gnome.shell.extensions.topicons.gschema.xml'
-	],
-	install_dir : schemadir
-)
diff --git a/extensions/topicons-plus/schemas/org.gnome.shell.extensions.topicons.gschema.xml b/extensions/topicons-plus/schemas/org.gnome.shell.extensions.topicons.gschema.xml
deleted file mode 100644
index 3c2ca65..0000000
--- a/extensions/topicons-plus/schemas/org.gnome.shell.extensions.topicons.gschema.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<schemalist gettext-domain="TopIcons-Plus">
-  <schema id="org.gnome.shell.extensions.topicons" path="/org/gnome/shell/extensions/topicons/">
-    <key name="icon-saturation" type="d">
-      <default>0.4</default>
-      <summary>Saturation</summary>
-    </key>
-    <key name="icon-brightness" type="d">
-      <default>0.0</default>
-      <summary>Brightness</summary>
-    </key>
-    <key name="icon-contrast" type="d">
-      <default>0.0</default>
-      <summary>Contrast</summary>
-    </key>
-    <key name="icon-opacity" type="i">
-      <default>220</default>
-      <summary>Opacity</summary>
-    </key>
-    <key name="icon-size" type="i">
-      <default>24</default>
-      <summary>Icon size</summary>
-      <description>Icon size in pixel</description>
-    </key>
-    <key name="icon-spacing" type="i">
-      <default>12</default>
-      <summary>Icon spacing</summary>
-      <description>Icon spacing within the tray</description>
-    </key>
-    <key name="tray-pos" type="s">
-      <default>"center"</default>
-      <summary>Position in tray</summary>
-      <description>Set where the TopIcon tray should appear in Gnome tray</description>
-    </key>
-    <key name="tray-order" type="i">
-      <default>1</default>
-      <summary>Order in tray</summary>
-      <description>Set where the TopIcon tray should appear among other trays</description>
-    </key>
-  </schema>
-</schemalist>
diff --git a/extensions/topicons-plus/stylesheet.css b/extensions/topicons-plus/stylesheet.css
deleted file mode 100644
index 25134b6..0000000
--- a/extensions/topicons-plus/stylesheet.css
+++ /dev/null
@@ -1 +0,0 @@
-/* This extensions requires no special styling */
diff --git a/meson.build b/meson.build
index ad6ad5f..aa6dcaf 100644
--- a/meson.build
+++ b/meson.build
@@ -49,7 +49,6 @@ tos_extensions = [
   'desktop-icons-ng',
   'alternate-tab',
   'search',
-  'topicons-plus'
 ]
 
 
