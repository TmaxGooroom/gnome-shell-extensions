From: gangmo_seong <gangmo_seong@tmax.co.kr>
Date: Thu, 4 Nov 2021 15:58:40 +0900
Subject: [refactor] dash-to-panel: code cleanup

- code cleanup
- fix notification-related logic don't work in sub panel

[IMS] N/A
---
 extensions/dash-to-panel/panel.js | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/extensions/dash-to-panel/panel.js b/extensions/dash-to-panel/panel.js
index b9e5d8a..a98ab80 100644
--- a/extensions/dash-to-panel/panel.js
+++ b/extensions/dash-to-panel/panel.js
@@ -149,9 +149,8 @@ var dtpPanel = Utils.defineClass({ // eslint-disable-line no-unused-vars
             this.panel.add_child(this._centerBox);
             this.panel.add_child(this._rightBox);
 
-            // Add empty St.BoxLayout instead of notification icon for sub monitor
-            // There is no notification icon in sub monitor panel, therefore allocation try to notification icon become targetless
-            // To prevent this, added empty box to sub panel and set allocation target to this empty box in setAllocationMap()
+            // There is no notification icon in sub monitor panel
+            // add empty box to sub panel to avoid error
             this.panel.add_child(this._emptyActor);
         } else {
             this.panel = Main.panel;
@@ -165,7 +164,7 @@ var dtpPanel = Utils.defineClass({ // eslint-disable-line no-unused-vars
             // Add NotificationCenter to panel actor when NotificationCenter loaded earlier than dtpPanel
             ['activities', 'aggregateMenu', 'dateMenu', 'NotificationCenter'].forEach(b => {
                 let container;
-                if (b === 'NotificationCenter' && !this.statusArea.NotificationCenter)
+                if (!this.statusArea[b])
                     container = this._emptyActor;
                 else
                     container = this.statusArea[b].container;
@@ -895,16 +894,17 @@ var dtpPanel = Utils.defineClass({ // eslint-disable-line no-unused-vars
 
         setMap(Pos.DESKTOP_BTN, this._showDesktopButton);
 
-        this.moveNotificationCenter();
+        if (!this.isStandalone)
+            this.moveNotificationCenter();
     },
 
     moveNotificationCenter() {
     // move notificationcenter from rightbox to panel actor when NotiCenter loaded later than dtpPanel
-        this.moveNotificationCenterId = this._rightBox.connect('actor-added', (addee, added) => {
+        this.moveNotificationCenterId = this._rightBox.connect('actor-added', (addedBox, addedActor) => {
             if (!this.statusArea.NotificationCenter || this.isStandalone)
                 return;
             let container = this.statusArea.NotificationCenter.container;
-            if (container !== added)
+            if (container !== addedActor)
                 return;
             let parent = container.get_parent();
             container._dtpOriginalParent = parent;
@@ -920,7 +920,7 @@ var dtpPanel = Utils.defineClass({ // eslint-disable-line no-unused-vars
 
         // revert noticenter actor on panel to empty actor
         this.revertNotificationCenterId = Main.extensionManager.connect('extension-state-changed', (data, extension) => {
-            if (extension.uuid !== 'notification-center@tmax-shell-extensions' || extension.state !== state.DISABLED)
+            if (extension.uuid !== 'notification-center@tmax-shell-extensions' || extension.state !== state.DISABLED || this.isStandalone)
                 return;
 
             this.panel.actor.add_child(this._emptyActor);
